resources:

- repo: self

phases:

- phase: Phase_1

  displayName: Windows Agent



  condition: succeeded()

  queue:

    name: Hosted Windows Container

  steps:

  - powershell: |  
       if (!(Get-Module Pester | ? Version -ge 4.0.0)) {
           Write-Host "`nInstalling Pester"
           Install-Module -Name Pester -Force -SkipPublisherCheck -Scope CurrentUser -Repository PSGallery
           Get-Module Pester -List    
       }
       
       Write-Host "Run Pester tests"
       $Result = Invoke-Pester -PassThru
       if ($Result.failedCount -ne 0) {Write-Error "Pester returned errors"} 

    displayName: 'PowerShell Script'





- phase: Phase_2

  displayName: Ubuntu Agent



  condition: succeeded()

  queue:

    name: Hosted Ubuntu 1604

  steps:

  - powershell: |  
       if (!(Get-Module Pester | ? Version -ge 4.0.0)) {
           Write-Host "`nInstalling Pester"
           Install-Module -Name Pester -Force -SkipPublisherCheck -Scope CurrentUser -Repository PSGallery
           Get-Module Pester -List    
       }
       
       Write-Host "Run Pester tests"
       $Result = Invoke-Pester -PassThru
       if ($Result.failedCount -ne 0) {Write-Error "Pester returned errors"} 

    displayName: 'PowerShell Script'





